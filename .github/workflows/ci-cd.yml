name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.20 # Correct Go version format

      - name: Install Go dependencies
        run: go mod download

      - name: Run Go tests
        run: go test -v ./...

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install frontend dependencies
        run: |
          cd client
          npm install

      - name: Build frontend
        run: |
          cd client
          npm run build

      - name: Log in to Docker Hub
        run: echo "${{ secrets.PASSWORD }}" | docker login ${{ secrets.REGISTRY }} -u ${{ secrets.USERNAME }} --password-stdin

      - name: Build and push Docker images
        run: |
          docker-compose build
          docker tag golang-api-api:latest ${{ secrets.USERNAME }}/golang-api-api:latest
          docker tag golang-api-frontend:latest ${{ secrets.USERNAME }}/golang-api-frontend:latest
          docker push ${{ secrets.USERNAME }}/golang-api-api:latest
          docker push ${{ secrets.USERNAME }}/golang-api-frontend:latest

      - name: Deploy to AWS ECS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws ecs update-service --cluster my-cluster --service my-service --force-new-deployment
